var fs = require("fs-extra");
var path = require("path");
var commons = require("@vimlet/commons");

var jsBeautifyHTML = require("js-beautify").html;
var jsBeautifyCSS = require("js-beautify").css;
var glob = require("glob");

var program = require("commander");

var cwd = process.cwd();

var htmlOptions = {
    indent_size: 2,
    indent_char: " ",
    indent_with_tabs: false,
    eol: "\n",
    end_with_newline: true,
    wrap_attributes: "force-aligned",
    unformatted: [],
    content_unformatted: []
};

var cssOptions = {
    indent_size: 2,
    indent_char: " ",
    indent_with_tabs: false,
    eol: "\n",
    end_with_newline: true,
    newline_between_rules: true
};

exports.prettier = function (packagePath, params, cb) {
    if (!params) {
        params = ["**/*.js", "--write"]
    }
    commons.run.exec(path.join(cwd, "node_modules/.bin/prettier"), params, packagePath, null, cb);
};

exports.jsBeautifyHTML = function (args, cb) {

    program.option("-i", "--input").parse(args);

    var inputPath = program.input || "**/*.html";
    var inputGlob = path.join(cwd, inputPath);

    var fileText;
    var beautifiedText;

    glob(inputGlob, { absolute: true }, function (error, files) {

        console.log("Found " + files.length + " html files to beautify");

        files.forEach(function (file) {
            if (!file.includes("node_modules")) {
                // console.log(file);
                fileText = fs.readFileSync(file, "utf8");
                beautifiedText = jsBeautifyHTML(fileText, htmlOptions);
                fs.writeFileSync(file, beautifiedText, "utf8");
            }
        });

        if (cb) {
            cb();
        }

    });

};

exports.jsBeautifyCSS = function (args, cb) {

    program.option("-i", "--input").parse(args);

    var inputPath = program.input || "**/*.css";
    var inputGlob = path.join(cwd, inputPath);

    var fileText;
    var beautifiedText;

    glob(inputGlob, { absolute: true }, function (error, files) {

        console.log("Found " + files.length + " css files to beautify");

        files.forEach(function (file) {
            if (!file.includes("node_modules")) {
                // console.log(file);
                fileText = fs.readFileSync(file, "utf8");
                beautifiedText = jsBeautifyCSS(fileText, cssOptions);
                fs.writeFileSync(file, beautifiedText, "utf8");
            }
        });

        if (cb) {
            cb();
        }

    });

};

