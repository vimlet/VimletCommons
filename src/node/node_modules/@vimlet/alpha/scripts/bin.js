var fs = require("fs-extra");
var path = require("path");

exports.getPackageBins = function (packageNames) {

    var bins = {};
    var packagePath;
    var packageFile;
    var packageObject;

    packageNames.forEach(function (packageName) {

        packagePath = path.join(__dirname, "../node_modules", packageName, "package.json");

        if (fs.existsSync(packagePath)) {

            packageFile = fs.readFileSync(packagePath);

            packageObject = JSON.parse(packageFile.toString());

            if (packageObject.bin) {

                Object.keys(packageObject.bin).forEach(function (key) {

                    bins[key] = "node_modules/"
                        + packageName
                        + "/"
                        + path.posix.normalize(packageObject.bin[key]);

                });

            }

        }

    });

    return bins;
};

exports.setPackageBins = function (bins) {

    var packagePath = path.join(__dirname, "../package.json");

    if (fs.existsSync(packagePath)) {

        // Read package file
        var packageFile = fs.readFileSync(packagePath);
        var packageObject = JSON.parse(packageFile.toString());

        // Add bins
        if (!packageObject.bin) {
            packageObject.bin = {};
        }

        Object.keys(bins).forEach(function (key) {
            packageObject.bin[key] = bins[key];
        });

        // Write package file
        fs.writeFileSync(packagePath, JSON.stringify(packageObject, null, 2));

    }

};


exports.getHoisteBins = function () {

    var hoistedBins = [];

    var packagePath = path.join(__dirname, "../package.json");

    if (fs.existsSync(packagePath)) {

        // Read package file
        var packageFile = fs.readFileSync(packagePath);
        var packageObject = JSON.parse(packageFile.toString());

        // Add bins
        if (packageObject.hoisteBins) {
            return packageObject.hoisteBins
        }
    }

    return hoistedBins;
};

// Run if invoked through cli
if (!module.parent) {
    // Add bins for declared hoisteBins packages 
    var hoistedPackages = exports.getHoisteBins();
    var hoistedBins = exports.getPackageBins(hoistedPackages);
    exports.setPackageBins(hoistedBins);
}