{"header":["Provide methods for listing, copying, deletion and moving files. Glob implemented."],"path":"modules\\io\\index.js","properties":[],"methods":[{"description":"Return an array of absolute paths from a file index","name":"absoluteFiles","params":[{"type":"object","description":"Object with folders and relative paths","name":"index"}],"return":{"type":"string[]"},"exceptions":[],"scope":"public"},{"description":"Delete a folder and its content","name":"deleteFolderRecursive","params":[{"type":"string","description":"Folder path","name":"folderPath"},{"name":"callback"}],"return":null,"exceptions":[],"scope":"public"},{"description":"Delete a folder and its content","name":"deleteFolderRecursiveSync","params":[{"type":"string","description":"Folder path","name":"folderPath"}],"return":null,"exceptions":[],"scope":"public"},{"description":"Return base path, what all have in common, for given paths","name":"getCommonBasePath","params":[{"type":"string[]","description":"String with multiple path to compare","name":"paths"}],"return":{"type":"string"},"exceptions":[],"scope":"public"},{"description":"Get files recursively from directory","name":"getFileList","params":[{"type":"string","description":"Directory to search","name":"dir"},{"type":"string[]","description":"string[] of patterns to exclude from search","name":"exclude"}],"return":{"type":"string[]"},"exceptions":[],"scope":"private"},{"description":"Get included files, returns an object wich contains relative path and root folder","name":"getFiles","params":[{"type":"string[]","description":"Array of patterns to search or single pattern","name":"dir"},{"description":"exclude: patterns to exclude from search, ignoreExtension: ignore file extensions","name":"options"}],"return":{"type":"object[]"},"exceptions":[]},{"description":"Returns the size of a file","name":"getFileSize","params":[{"type":"string","description":"Path of the file","name":"filePath"}],"return":{"type":"number"},"exceptions":[]},{"description":"Get root from a pattern.","name":"getRootFromPattern","params":[{"type":"string","name":"pattern"}],"return":{"type":"string"},"exceptions":[],"scope":"public"},{"description":"Check if a path is directory or file","name":"isDirectory","params":[{"type":"string","name":"path"}],"return":null,"exceptions":[],"scope":"public"},{"description":"Check if a given path belongs to a pattern","name":"isInPattern","params":[{"type":"string","description":"Path to file","name":"filePath"},{"type":"string","name":"pattern"},{"type":"object","description":"exlude:files to exclude from search","name":"options"}],"return":{"type":"boolean"},"exceptions":[],"scope":"public"},{"name":"writeToDisk","params":[{"type":"string","description":"Output folder","name":"output"},{"type":"string","description":"Data to write","name":"data"},{"name":"callback"}],"return":null,"exceptions":[],"scope":"private"}]}